<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
@font-face {
  font-family: 'iconfont'; /* project id 767252 */
  src: url('//at.alicdn.com/t/font_767252_tzutcvuvxmq.eot');
  src: url('//at.alicdn.com/t/font_767252_tzutcvuvxmq.eot?#iefix')
      format('embedded-opentype'),
    url('//at.alicdn.com/t/font_767252_tzutcvuvxmq.woff') format('woff'),
    url('//at.alicdn.com/t/font_767252_tzutcvuvxmq.ttf') format('truetype'),
    url('//at.alicdn.com/t/font_767252_tzutcvuvxmq.svg#iconfont') format('svg');
}
.iconfont {
  font-family: 'iconfont' !important;
  // font-size: 16px;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -webkit-text-stroke-width: 0.2px;
  -moz-osx-font-smoothing: grayscale;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/detail'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
