<style lang="less">
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
}
</style>
<template>
  <view class="container" >
    <scroll-view scroll-y bindscrolltoupper="upper" bindscrolltolower="lower" bindscroll="scroll" scroll-into-view="{{toView}}" scroll-top="{{scrollTop}}">
      <!-- <block wx:for="{{designs}}">
            <view class="container"  wx:if="{{item.designCover}}">
                <card @select-card.user="tap" :design="item"/>
              </view>
      </block> -->

        <repeat for="{{designs}}" item="item" key="assetId">
          <view class="container">
            <card @select-card.user="tap" :item.sync="item"/>
            <view >{{ JSON.stringify(item) }}</view>
          </view>
        </repeat>
      <!-- <view class="container" >
      <card @select-card.user="tap"/>
      </view>      
      <view class="container" >
      <card @select-card.user="tap"/>
      </view>           
       <view class="container" >
      <card @select-card.user="tap"/>
      </view>     
      <view class="container" >
      <card @select-card.user="tap"/>
      </view>     
      <view class="container" >
      <card @select-card.user="tap"/>
      </view>      -->
  </scroll-view>
    <!-- <card @select-card.user="tap"/> -->
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { fetchDesigns } from '../io/request'
  import Card from '../components/card'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '渲染图'
    }
    components = {
      card: Card
    }

    data = {
      designs:[]
    }

    computed = {
    }
    events = {
      'select-card': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }
    methods = {
      tap(id) {
        /** global wx **/
        wx.navigateTo({
          url: `/pages/detail?id=${id}`  // 打开一个新的同路由页面，但指定不同的数据初始值
        })
      }
    }

    events = {
    }

    async loadList(){
      const {data:{cases,offset, limit}} = await fetchDesigns();
      // console.log(offset)
      // console.log(cases);
      this.designs = cases;
      console.log(cases);
      this.$apply();
      wx.hideLoading();
    }

    onLoad() {
    wx.showLoading({
      title: '加载中'
    })
    this.loadList()
    }
  }
</script>
